Kernel command line: -q -f put wait-bad-pid run wait-bad-pid
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  52,377,600 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 102 sector (51 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'wait-bad-pid' into the file system...
Executing 'wait-bad-pid':
(wait-bad-pid) begin
Kernel PANIC at ../../userprog/process.c:94 in get_child_process(): fuck!
Call stack: 0x8004218423 0x800421bbdb 0x800421c005 0x800421d808 0x800421d4b1 0x800421d292 0x4000fd 0x40015b 0x400bfc.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 62 ticks
Thread: 30 idle ticks, 30 kernel ticks, 2 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 80 reads, 232 writes
hd1:0: 102 reads, 0 writes
Console: 1130 characters output
Key